import React, { useState, useEffect } from "react"
import { SafeAreaView, StyleSheet, Dimensions, Alert } from "react-native"
import { Button, Text, Layout } from "@ui-kitten/components"
import * as Location from "expo-location"
import MapView, {Marker, Polyline} from "react-native-maps"
import { TopBasic } from "../components/navigations/TopBasic";

const MapScreen = ({  }) => {
  const [userMarker, setUserMarker] = useState(null)
  const getLocation = async () => {
    try {
      await Location.requestPermissionsAsync()
      const location = await Location.getCurrentPositionAsync()
      console.log(location.coords.latitude, location.coords.longitude)
    } catch (error) {
      Alert.alert("현재 위치 정보를 가져올 수 없습니다.", "슬프네요.")
    }
  }
  const { height, width } = Dimensions.get( 'window' );
  const LATITUDE_DELTA = 0.38;
  const LONGITUDE_DELTA = LATITUDE_DELTA * (width / height);

  useEffect(() => {
    getLocation()
    // 강아지 위치를 가져와서 MapView의 initialRegion으로 설정
    // 사용자 위치를 가져와서 마커로 지정
  })
  const datas = [[36.348310901195, 127.29743274887], [36.348310901195, 127.29743274887], [36.3482977192412, 127.297476235729], [36.3482844216139, 127.297520104191], [36.3482717312722, 127.297561969237], [36.348262547282, 127.297592266937], [36.3482545320757, 127.297618708855], [36.3482545320757, 127.297618708855], [36.3482545320757, 127.297618708855], [36.3482545320757, 127.297618708855], [36.3482106460495, 127.297763487501], [36.3481928853548, 127.297822079485], [36.3481789105558, 127.297868181915], [36.3481668756969, 127.297907884543], [36.3481532985254, 127.297952675213], [36.3481532985254, 127.297952675213], [36.3481532985254, 127.297952675213], [36.3481532985254, 127.297952675213], [36.3482085470085, 127.298201709402], [36.3482423504273, 127.298221025641], [36.3482764529914, 127.298240512821], [36.3483048717949, 
    127.298256752137], [36.3483296153846, 127.298283589744], [36.3483296153846, 127.298283589744], [36.3483296153846, 127.298283589744], [36.3483296153846, 127.298283589744], [36.3484061971867, 127.298443494021], [36.3484061971867, 127.298443494021], [36.3484061971867, 127.298443494021], [36.3484061971867, 127.298443494021], [36.3483600350699, 127.29857462119], [36.3483451951856, 127.298616775062], [36.3483294852393, 127.298661400416], [36.3483117288717, 127.298711838792], [36.34829658269, 127.298754862727], [36.34829658269, 127.298754862727], [36.34829658269, 127.298754862727], [36.34829658269, 127.298754862727], [36.34825, 127.298891666667], [36.3482388214281, 127.298925800445], [36.3482219033198, 127.298960504256], [36.3482060793495, 127.298992963682], [36.3481864669264, 127.299033194292], [36.3481652269732, 127.299076763426], [36.3481483362183, 127.299111411128], [36.3481298452867, 127.299149341243], [36.3481080719411, 127.299194004515], [36.3480890202638, 127.299233084878], [36.3480721568623, 127.299267676469], [36.3480552661075, 127.299302324171], [36.3480378966672, 127.299337953791], [36.3480378966672, 127.299337953791], [36.3480378966672, 127.299337953791], [36.3480378966672, 127.299337953791], [36.347952305459, 127.299462830747], [36.347952305459, 127.299462830747], [36.347952305459, 127.299462830747], [36.3478722266905, 127.299586201966], [36.3478722266905, 127.299586201966], [36.3478722266905, 127.299586201966], [36.3477638114388, 127.299705832589], [36.3477638114388, 127.299705832589], [36.3477638114388, 127.299705832589], [36.3477638114388, 127.299705832589], [36.3477233824844, 127.299750443849], [36.3477267515639, 127.299746726244], [36.3477267515639, 127.299746726244], [36.3477327554364, 127.299740101281], [36.347733489723, 127.299739291034], [36.347735735776, 127.29973681263], [36.347735735776, 127.29973681263], [36.347735735776, 127.29973681263], [36.3477400983021, 127.299731998808], [36.3477400983021, 127.299731998808], [36.3477518900804, 127.299718987191], [36.3477518900804, 127.299718987191], [36.3477611766458, 127.299708739946], [36.3477611766458, 127.299708739946], [36.3477611766458, 127.299708739946], [36.3477611766458, 127.299708739946], [36.3477665758117, 127.299702782246], [36.3477665758117, 127.299702782246], [36.3477665758117, 127.299702782246], [36.3477665758117, 127.299702782246], [36.3477665758117, 127.299702782246], [36.3477665758117, 127.299702782246], [36.3477665758117, 127.299702782246], [36.3477665758117, 127.299702782246], [36.3477632067322, 127.299706499851], [36.3477632067322, 127.299706499851], [36.3477632067322, 127.299706499851], [36.3477632067322, 127.299706499851], [36.3477595784927, 127.299710503426], [36.3477595784927, 127.299710503426], [36.3477632067322, 127.299706499851], [36.3477732275842, 127.299695442359], [36.3480500603661, 127.299914115321], [36.3480500603661, 127.299914115321], [36.3480500603661, 127.299914115321], [36.3480500603661, 127.299914115321], [36.3480066076916, 127.29996750815], [36.3480066076916, 127.29996750815], [36.3480066076916, 127.29996750815], [36.3480066076916, 127.29996750815], [36.347744979148, 127.299726613047], [36.347748132261, 127.29972313375], [36.3477574188263, 127.299712886506], [36.3477803976765, 127.299687530533], [36.3478047587131, 127.299660649389], [36.3478277375633, 127.299635293417], [36.347849075067, 127.299611748585], [36.3478721834972, 127.299586249628], [36.3478912270283, 127.29955881114], [36.3479133021915, 127.299524121597], [36.3479340048056, 127.299491588917], [36.3479556224524, 127.299457618329], [36.3479698054588, 127.299435330747], [36.3479815865045, 127.299416817675], [36.3480020603606, 127.299384644472], [36.3480282531708, 127.299343484341], [36.3480623506503, 127.299287791776], [36.3480623506503, 127.299287791776], [36.3480623506503, 127.299287791776], [36.3481469685451, 127.299114216611], [36.3481469685451, 127.299114216611], [36.3481469685451, 127.299114216611], [36.3482190722369, 127.298966311606], [36.3482190722369, 127.298966311606], [36.3482190722369, 127.298966311606], [36.3483055807288, 127.298729303081], [36.3483317181022, 127.298655057791], [36.3483498295972, 127.298603610647], [36.3483594491094, 127.298576285657], [36.3483699386836, 127.298546489186], [36.3483807345552, 127.298515822653], [36.3483909178321, 127.298486896245], [36.3484031475303, 127.298452156813], [36.3483562393162, 127.298298803419], [36.3483562393162, 127.298298803419], [36.3483562393162, 127.298298803419], [36.348355940171, 127.298298632479], [36.3483548290598, 127.298285299145], [36.3483638034188, 127.29829042735], [36.3483826495726, 127.298301196581], [36.3484023931624, 127.298312478632], [36.3484155555556, 127.29832], [36.3484254273504, 127.298325641026], [36.3484254273504, 127.298325641026], [36.3484254273504, 127.298325641026], [36.3484505282035, 127.298324988175], [36.3484505282035, 127.298324988175], [36.3484505282035, 127.298324988175], [36.3484505282035, 127.298324988175], [36.3484118803419, 127.298330598291], [36.3483924358974, 127.29831948718], [36.3483750854701, 127.29830957265], [36.3483565384615, 127.298298974359], [36.3483323076923, 127.298285128205], [36.3483056837607, 127.29826991453], [36.3482808547008, 127.298255726496], [36.3482593162393, 127.298243418803], [36.3482288034188, 127.298225982906], [36.3482015811966, 127.29821042735], [36.3481767521367, 127.298196239316], [36.3481694444445, 127.298188888889], [36.3481694444445, 127.298188888889], [36.3481390417609, 127.298165002797], [36.3481107088907, 127.29813780324], [36.348102382496, 127.298129809901], [36.3481, 127.298119444444], [36.3481, 127.298119444444], [36.3480924437485, 127.298114470585], [36.3481112078479, 127.298091531059], [36.348123943977, 127.298049514962], [36.3481379886621, 127.29800318198], [36.3481502572777, 127.297962708195], [36.3481634609204, 127.297919149786], [36.3481769682059, 127.297874589668], [36.3481935601168, 127.297819853466], [36.348208679601, 127.297769974754], [36.3482198734175, 127.297733046699], [36.3482353206431, 127.297682086778], [36.3482506039981, 127.297631667462], [36.3482623352141, 127.297592966542], [36.3482736688027, 127.297555577383], [36.3482860771904, 127.297514642495], [36.3483052862132, 127.297451272522], [36.3483254302631, 127.297384817923], [36.3483118376318, 127.297201332079], [36.3483114680246, 127.297201156858], [36.3483110984175, 127.297200981637], [36.348310493606, 127.297200694911], [36.3483918964398, 127.297161018672], [36.3484116019348, 127.297097210401], [36.3484266085158, 127.297048617662], [36.3484277777778, 127.297038888889], [36.3484410130719, 127.296991503268], [36.3484498366013, 127.29695620915], [36.3484498366013, 127.29695620915], [36.3484498366013, 127.29695620915], [36.3484498366013, 127.29695620915]]
  return (
    <SafeAreaView style={{ flex: 1 }}>
      <Layout style={{}}>
      <TopBasic screenName="산책 기록 보기" />
      </Layout>
      <Layout style={styles.map}>
      <MapView
        style={styles.mapStyle}
        initialRegion={{
          latitude: 36.348310901195,
          longitude: 127.29743274887,
          latitudeDelta: LATITUDE_DELTA,
          longitudeDelta: LONGITUDE_DELTA,
        }}
      >
        <Marker
          coordinate={{latitude:36.348310901195,longitude:127.29743274887}}
          title={'현재위치'}
          description={'사용자의 현재 위치입니다.'}
          onPress={() => console.log('haha')}
        />
        <Polyline
         coordinates={[
          { latitude: 36.348310901195, longitude: 127.29743274887 },
          { latitude: 36.348310901195, longitude: 127.29743274887 },
          { latitude: 36.3482977192412, longitude: 127.297476235729 },
          { latitude: 36.3482844216139, longitude: 127.297520104191 },
          { latitude: 36.3482717312722, longitude: 127.297561969237 },
          { latitude: 36.3484061971867, longitude: 127.298443494021 }
        ]}
        strokeColor="#000" // fallback for when `strokeColors` is not supported by the map-provider
        strokeColors={[
          '#7F0000',
          '#00000000', // no color, creates a "long" gradient between the previous and next coordinate
          '#B24112',
          '#E5845C',
          '#238C23',
          '#7F0000'
        ]}
        strokeWidth={6}
      />
      </MapView>
      </Layout>
      <Layout style={styles.info}>
        <Text>
        {new Date().getMonth() +1}월 {new Date().getDate()}일 x 번째 산책 {'\n'}
          산책 시간 {'\n'}
          산책 동안 배변 활동
        </Text>

      </Layout>
    </SafeAreaView>
  )
}

const styles = StyleSheet.create({
  map: {
    flex: 2,
    backgroundColor: "#fff",
    alignItems: "center",
    justifyContent: "center",
  },
  info: {
    flex: 1,
    backgroundColor: "#fff",
    alignItems: "center",
    justifyContent: "center",
  },
  mapStyle: {
    width: Dimensions.get("window").width,
    height: Dimensions.get("window").height,
  },
})

export default MapScreen
